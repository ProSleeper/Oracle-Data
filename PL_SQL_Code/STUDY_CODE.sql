--01045020614 처럼 전화번호에 -가 안붙어 있다면 붙여주는 코드
--PNUM이 전화번호 0187924758 처럼 옛날 번호도 가능
SELECT SUBSTR(REPLACE(PNUM, '01'||SUBSTR(PNUM, 3, 1), '01'||SUBSTR(PNUM, 3, 1)||'-'), 1, LENGTH(PNUM) - 3)||SUBSTR(REPLACE(PNUM, SUBSTR(PNUM, -5, 1), SUBSTR(PNUM, -5, 1)||'-'), -5) AS 전화번호 FROM PHONE;-- REPLACE(SUBSTR(PNUM, 3) != '-', ;




-- 연습문제 풀이

--SELECT DEPNO, DNAME, AVG_SAL, MAX_SAL, MIN_SAL, CNT FROM EMP;

--SELECT D.DEPTNO, D.DNAME, AVG(SAL) AVG_SAL, MAX(SAL) MAX_SAL, MIN(SAL) MIN_SAL, COUNT(*) CNT FROM DEPT D, EMP E WHERE DEPTNO <= 30;

--DO IT 239-2번 문제
SELECT D.DEPTNO, D.DNAME, TRUNC(AVG(SAL)) AVG_SAL, MAX(SAL) MAX_SAL, MIN(SAL) MIN_SAL, COUNT(*) CNT FROM DEPT D, EMP E WHERE D.DEPTNO = E.DEPTNO GROUP BY D.DEPTNO, D.DNAME;

SELECT E.ENAME FROM DEPT D, EMP E;

--DO IT 239-3번 문제
SELECT D.DEPTNO, D.DNAME, E.ENAME, E.EMPNO, E.JOB, E.SAL FROM EMP E, DEPT D WHERE E.DEPTNO(+) = D.DEPTNO GROUP BY D.DEPTNO, D.DNAME, E.ENAME, E.EMPNO, E.JOB, E.SAL ORDER BY DEPTNO;

--영운(GROUP BY 삭제: 필요 없었음)
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.MGR, E.SAL, E.DEPTNO "DEPTNO_1", S.GRADE, S.LOSAL, S.HISAL, M.EMPNO, M.ENAME
FROM EMP E, EMP M, DEPT D, SALGRADE S WHERE D.DEPTNO = E.DEPTNO(+) AND E.MGR = M.EMPNO(+) AND E.SAL BETWEEN S.LOSAL(+) AND S.HISAL(+)
GROUP BY D.DEPTNO, D.DNAME,  E.EMPNO, E.ENAME, E.MGR, E.SAL, E.DEPTNO, S.GRADE, S.LOSAL, S.HISAL, M.EMPNO, M.ENAME ORDER BY D.DEPTNO;

--영운(최종)
SELECT D.DEPTNO, D.DNAME, E.EMPNO, E.ENAME, E.MGR, E.SAL, E.DEPTNO "DEPTNO_1", S.GRADE, S.LOSAL, S.HISAL, M.EMPNO, M.ENAME
FROM EMP E, EMP M, DEPT D, SALGRADE S WHERE D.DEPTNO = E.DEPTNO(+) AND E.MGR = M.EMPNO(+) AND E.SAL BETWEEN S.LOSAL(+) AND S.HISAL(+) ORDER BY D.DEPTNO, E.EMPNO;

--시연
SELECT C.DEPTNO,DNAME,A.EMPNO,A.ENAME,A.MGR,A.SAL,A.DEPTNO DEPTNO_1,D.LOSAL,D.HISAL,D.GRADE,A.MGR,B.ENAME
FROM EMP 
A RIGHT OUTER JOIN DEPT C ON A.DEPTNO = C.DEPTNO
LEFT JOIN SALGRADE D ON A.SAL BETWEEN D.LOSAL AND D.HISAL
LEFT JOIN EMP B ON A.MGR = B.EMPNO
ORDER BY C.DEPTNO,A.EMPNO;

-- HAVING E.SAL BETWEEN S.LOSAL AND S.HISAL
-- SAL BETWEEN '1991-09-01' AND '1991-09-30'

SELECT * FROM EMP;

SELECT EMPNO AS EMPLOYEE_NO, ENAME AS EMPLOYEE_NAME, MGR AS MANAGER, SAL AS SALARY, COMM AS COMMISSION, DEPTNO AS DEPARTMENT_NO FROM EMP;

SELECT * FROM EMP ORDER BY DEPTNO, ENAME;


--DO IT 174~5 페이지

--1번
SELECT EMPNO, RPAD(SUBSTR(EMPNO, 1, 2), LENGTH(EMPNO), '*') AS MASKING_EMPNO, ENAME, RPAD(SUBSTR(ENAME, 1, 1), LENGTH(ENAME), '*') MASKING_ENAME FROM EMP WHERE LENGTH(ENAME) = 5;

--2번
SELECT  EMPNO, ENAME, SAL, SAL, TRUNC(SAL/21.5, 2) AS DAY_PAY, ROUND(SAL/21.5/8, 1) AS TIME_PAY FROM EMP;  

--3번
SELECT EMPNO, ENAME, TO_CHAR(HIREDATE, 'YYYY-MM-DD') AS HIREDATE, TO_CHAR(NEXT_DAY(ADD_MONTHS(HIREDATE, 3), '월'), 'YYYY-MM-DD') AS R_JOB, NVL2(COMM, TO_CHAR(COMM), 'N/A') FROM EMP;

--4번
SELECT EMPNO, ENAME, MGR,
(CASE 
	WHEN MGR IS NULL THEN 
		'0000'
	WHEN SUBSTR(MGR, 1,2) = '75' THEN 
		'5555'
	WHEN SUBSTR(MGR, 1,2) = '76' THEN 
		'6666'
	WHEN SUBSTR(MGR, 1,2) = '77' THEN 
		'7777'
	WHEN SUBSTR(MGR, 1,2) = '78' THEN 
		'8888'
	ELSE TO_CHAR(MGR)
END) AS CHG_MGR
FROM EMP;


--DO IT 213-5번
SELECT 
DEPTNO, TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR, COUNT(*) AS CNT, MAX(SAL) AS MAX_SAL, SUM(SAL) AS SUM_SAL, AVG(SAL) AS AVG_SAL 
FROM EMP GROUP BY ROLLUP(DEPTNO, TO_CHAR(HIREDATE, 'YYYY'));

--DO IT 125~6페이지
--1번
SELECT * FROM EMP WHERE ENAME LIKE '%S';

--2번
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP WHERE DEPTNO = 30 AND JOB = 'SALESMAN';

--3번
	--집합 연산자X
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP WHERE DEPTNO IN(20, 30) AND SAL > 2000; 

	--집합 연산자O
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP WHERE DEPTNO = 30 AND SAL > 2000
UNION
SELECT EMPNO, ENAME, JOB, SAL, DEPTNO FROM EMP WHERE DEPTNO = 20 AND SAL > 2000; 

--4번
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO FROM EMP WHERE SAL < 2000 OR SAL > 3000;


--5번
SELECT ENAME, EMPNO, SAL, DEPTNO FROM EMP WHERE ENAME LIKE '%E%' AND DEPTNO = 30 AND (SAL NOT BETWEEN 1000 AND 2000);

--6번
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO
FROM EMP 
WHERE COMM IS NULL
	AND MGR IS NOT NULL
	AND (JOB = 'CLERK' OR JOB = 'MANAGER') AND NOT ENAME LIKE '_L%';


SELECT RPAD(SUBSTR(EMPNO, 1, 1), LENGTH(EMPNO), '*') FROM EMP;

SELECT LPAD(SUBSTR(EMPNO, -1), LENGTH(EMPNO), '*') FROM EMP;


SELECT TRIM(LPAD(SUBSTR(EMPNO, -1), LENGTH(EMPNO))) FROM EMP;

SELECT MOD(10, 0) FROM DUAL;


SELECT * FROM EMP;


SELECT TO_NUMBER('1300') - TO_NUMBER('1500') FROM DUAL;  

SELECT DECODE(MGR, '7698', 'BLAKE') AS MGRT FROM EMP;

SELECT (CASE  WHEN MGR = 7698 THEN 'BLAKE' ELSE NULL END) AS MGRT FROM EMP;

SELECT COUNT(EMPNO), SUM(COMM)/14, AVG(COMM) FROM EMP;

SELECT SUM(DISTINCT SAL), SUM(ALL SAL), SUM(SAL) FROM EMP;

SELECT SUM(SAL), SUM(COMM) FROM EMP;

SELECT COUNT(DISTINCT JOB) FROM EMP;

SELECT DEPTNO, EMPNO 직원번호, 
		SAL 연봉, 
		ROUND(AVG(SAL) OVER(PARTITION by DEPTNO)) 직원평균연봉, 
		SUM(SAL) OVER(PARTITION BY DEPTNO) 전체연봉
FROM EMP;

SELECT DEPTNO, AVG(SAL) FROM EMP GROUP BY DEPTNO ORDER BY DEPTNO;

SELECT DEPTNO, JOB, AVG(SAL) FROM EMP GROUP BY DEPTNO, JOB ORDER BY DEPTNO;

SELECT DEPTNO, JOB, SAL, AVG(SAL) FROM EMP GROUP BY DEPTNO, JOB, SAL ORDER BY DEPTNO;

SELECT * FROM EMP ORDER BY DEPTNO;

SELECT DEPTNO, JOB, SAL, AVG(SAL) FROM EMP WHERE DEPTNO  >= 20 GROUP BY DEPTNO, JOB, SAL ORDER BY DEPTNO;

SELECT DEPTNO, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL) FROM EMP GROUP BY ROLLUP(DEPTNO) ORDER BY DEPTNO;

SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL) FROM EMP GROUP BY ROLLUP(DEPTNO, JOB) ORDER BY DEPTNO;

SELECT DEPTNO, JOB, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL) FROM EMP GROUP BY CUBE(DEPTNO, JOB) ORDER BY DEPTNO;

SELECT DEPTNO, JOB, SAL, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL) FROM EMP GROUP BY ROLLUP (DEPTNO, JOB, SAL) ORDER BY DEPTNO;

SELECT DEPTNO, JOB, SAL, COUNT(*), MAX(SAL), SUM(SAL), AVG(SAL) FROM EMP GROUP BY CUBE (DEPTNO, JOB, SAL) ORDER BY DEPTNO;

--DO IT 212~213페이지
--1번
SELECT DEPTNO, TRUNC(AVG(SAL)) AS AVG_SAL, MAX(SAL) AS MAX_SAL, MIN(SAL) AS MIN_SAL, COUNT(*) AS CNT
FROM EMP GROUP BY DEPTNO;

--2번
SELECT JOB, COUNT(*) FROM EMP GROUP BY JOB HAVING COUNT(*) >= 3;


--3번
SELECT TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR, DEPTNO, COUNT(*) AS CNT
FROM EMP GROUP BY TO_CHAR(HIREDATE, 'YYYY'), DEPTNO ;


--4번
--0은 추가수당이 존재하는 것이라고 판단하는 코
SELECT NVL2(COMM, 'O', 'X') AS EXIST_COMM, COUNT(*) AS CNT FROM EMP GROUP BY NVL2(COMM, 'O', 'X');

-- 0과 NULL을 둘다 추가수당(COMM) 이 없다고 판단해서 출력하는 코
SELECT NVL2(COMM, 'O', 'X') AS EXIST_COMM, COUNT(NVL2(COMM, 'O', 'X')) AS CNT FROM EMP GROUP BY NVL2(COMM, 'O', 'X');

--여기 조건은 생각해야될 것이, COMM의 값이 0이나 NULL이나 사실상 못받는 건 똑같다고 봐야하는건지?
--일단 동일하다고 생각하고 코드 작성하자


--5번
SELECT
DEPTNO, TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR, COUNT(*) AS CNT, MAX(SAL) AS MAX_SAL, SUM(SAL) AS SUM_SAL, AVG(SAL) AS AVG_SAL 
FROM EMP GROUP BY ROLLUP(DEPTNO, TO_CHAR(HIREDATE, 'YYYY'));



