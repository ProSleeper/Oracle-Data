select * from tab;

SELECT * from PERSONNEL;

/*
SQL (Structured Query Language : 구조화된 질의 언어)
ANSI 표준

1. query
   select data검색어

2. dml(data maipulation language) 데이터 조작
    insert, update, delete
    
3. ddl(data difinition language) 데이터 정의
    create, alter, drop, rename
    
4. tcl(transaction control language) 트랜잭션 제어
    commit, rollback
    
5. dcl(data control language) 데이터 제어
    grant, revoke
*/
 
select * from personnel;

select pno, job, pay from personnel;

SELECT JOB FROM PERSONNEL;

SELECT DISTINCT JOB FROM PERSONNEL;

SELECT * FROM PERSONNEL
ORDER BY STARTDATE;


--별칭
SELECT PNO, PNAME, PAY, PAY+1000 AS BONUS FROM PERSONNEL;
SELECT PNO, PNAME, PAY, PAY+1000 BONUS FROM PERSONNEL;
SELECT PNO, PNAME, PAY, PAY+1000 보너스 FROM PERSONNEL;
SELECT PNO, PNAME, PAY, PAY+1000 "B O N U S" FROM PERSONNEL;

SELECT PNO 번호, PNAME AS 이름,PAY 월급,PAY + 1000 AS 보너스 FROM PERSONNEL;


SELECT PNO, PNAME, PAY, PAY+1000 AS 보너스 FROM PERSONNEL
ORDER BY 보너스;

SELECT PNO, PNAME, PAY, PAY+1000 AS 보너스 FROM PERSONNEL
ORDER BY PAY+1000;

SELECT PNO, PNAME, PAY, PAY+1000 AS 보너스 FROM PERSONNEL
ORDER BY 4 DESC;

SELECT * FROM PERSONNEL
ORDER BY 4 DESC;

SELECT DNO,PNO,PNAME FROM PERSONNEL
ORDER BY DNO,PNO DESC;


--부서번호는 오름차순, 사원번호는 내림차순 정렬
SELECT * FROM PERSONNEL
ORDER BY DNO, PNO DESC;
--뭘 따라가는거지??


--NULL
SELECT MANAGER FROM PERSONNEL
ORDER BY MANAGER DESC;

--사원의 급여와 연봉을 출력하시오
SELECT PNO,PAY,PAY*12 AS SALARY FROM PERSONNEL
ORDER BY PNO;

SELECT PNAME ||' '|| PNO FROM PERSONNEL;

SELECT * FROM PERSONNEL;


SELECT PNO,PNAME,PAY,NVL(BONUS, 0), (PAY*12) + NVL(BONUS, 0) SALARY FROM PERSONNEL;

--조건절(WHERE)
SELECT * FROM PERSONNEL;

SELECT PNO, PNAME, JOB FROM PERSONNEL
WHERE JOB = 'SALESMAN';


SELECT PNO, PNAME, JOB FROM PERSONNEL
WHERE JOB = 'salesman';

--연산자
--=, >, >=, <=, <, <>(같지 않다.)


--급여가 1600인 사원

SELECT * FROM PERSONNEL
WHERE PAY = 1600;

--사원번호가 1116인 사원
SELECT * FROM PERSONNEL
WHERE PNO = '1116';

--사원 급여가 2000이하인 사원
SELECT * FROM PERSONNEL
WHERE PAY <= 2000;

--90년 12월 17일 입사 사원
SELECT * FROM PERSONNEL
WHERE STARTDATE = '1990-12-17';

--업무가 CLERK인 사원
SELECT * FROM PERSONNEL
WHERE JOB = 'CLERK';

--이름이 JAMES인 사원
SELECT * FROM PERSONNEL WHERE PNAME = 'JAMES';

--논리 연산자
--AND, OR, NOT(!)

--부서번호가 10번이고 급여가 3000이상인 사원
SELECT * FROM PERSONNEL WHERE DNO = 10 AND PAY >= 3000;

--직업이 SALESMAN이고 90년 이후 입사 직원
SELECT * FROM PERSONNEL WHERE JOB = 'SALESMAN' AND STARTDATE >= '1990-12-31';

--91년 9월 입사직원
SELECT * FROM PERSONNEL WHERE STARTDATE >= '1991-9-1' AND STARTDATE <= '1991-9-30';

--날짜가 어떤 형식으로 되어 있는 지 보여줌
SELECT * FROM NLS_SESSION_PARAMETERS;

--부서번호가 10번이거나(or) 급여가 3000이상인 사원
SELECT * FROM PERSONNEL WHERE DNO = 10 OR PAY >= 3000;

--직업이 MANAGE 이거나(or) 90년 이전에 입사한 직원
SELECT * FROM PERSONNEL WHERE JOB = 'MANAGER' OR STARTDATE < '1990-1-1';

--NOT
--업무가 SALESMAN, CLERK인 직원
SELECT * FROM PERSONNEL WHERE JOB = 'SALESMAN' OR JOB = 'CLERK';

--업무가 SALESMAN, CLERK이 아닌 직원
SELECT * FROM PERSONNEL WHERE JOB <> 'SALESMAN' AND JOB <> 'CLERK';

--IN 문자열 연산자
SELECT * FROM PERSONNEL WHERE JOB IN('SALESMAN', 'CLERK');

SELECT * FROM PERSONNEL WHERE JOB NOT IN('SALESMAN', 'CLERK');

SELECT * FROM PERSONNEL WHERE NOT JOB IN('SALESMAN', 'CLERK');

--문자열 연산자
--BETWEEN A AND BACKUP

--급여가 1000에서 2000인 사원

SELECT * FROM PERSONNEL WHERE PAY >= 1000 AND PAY <= 2000;

--에러
SELECT * FROM PERSONNEL WHERE PAY BETWEEN 2000 AND 1000;

SELECT * FROM PERSONNEL WHERE STARTDATE BETWEEN '1991-09-01' AND '1991-09-30';

--부서번호가 20과 30사이가 아닌 사원을 찾으시오
--------------------------------------------------------------
--IN 은 20번과 30번만 찾는다
SELECT * FROM PERSONNEL WHERE DNO NOT IN (20, 30);

--BETWEEN은 20~30번 사이의 값을 모두 찾는다.
SELECT * FROM PERSONNEL WHERE NOT DNO BETWEEN 20 AND 30;
--------------------------------------------------------------

--이름이 A로 시작되는 사원
SELECT * FROM PERSONNEL WHERE PNAME LIKE 'A%';

--사원번호가 111_ 로 시작
SELECT * FROM PERSONNEL WHERE PNO LIKE '111_'; --_(언더바)는 정확히 한자리를 의미한다.

--사원번호가 111_ 로 시작
SELECT * FROM PERSONNEL WHERE PNO LIKE '111_%'; --%는 4자리 이상을 의미

SELECT * FROM PERSONNEL WHERE PNO LIKE '1__1';

--90년도에 입사한 사원
SELECT * FROM PERSONNEL WHERE STARTDATE LIKE '90%';

INSERT INTO PERSONNEL
VALUES(2000, 'HELLO_KIM','SALESMAN', 1116, '2022-07-04', 5000, '', 20);

INSERT INTO PERSONNEL
VALUES(2001, 'HELLOAKIM','SALESMAN', 1116, '2022-07-04', 5000, '', 20);



SELECT * FROM PERSONNEL;

--O_K 를 포함한 이름 검색

SELECT * FROM PERSONNEL WHERE PNAME LIKE '%O_K%';

SELECT * FROM PERSONNEL WHERE PNAME LIKE '%O\_K%' ESCAPE '\'; --_(언더바)를 문자로 사용하고 싶을 때는 \를 붙여주고 ESCAPE로 '\'을 빼준다.

--NULL
SELECT * FROM PERSONNEL
WHERE MANAGER = NULL; --X(MS-SQL에서는 된다.)

SELECT * FROM PERSONNEL
WHERE MANAGER = 'NULL'; --X

SELECT * FROM PERSONNEL
WHERE MANAGER IS NULL;

SELECT * FROM PERSONNEL
WHERE MANAGER IS NOT NULL;

--우선순위
--업무가 MANAGER이고 급여가 1500이상인 사원
--또는 업무가 SALESMAN인 사원
SELECT * FROM PERSONNEL WHERE (JOB = 'MANAGER' AND PAY >= 1500) OR JOB = 'SALESMAN' ORDER BY JOB;

SELECT * FROM PERSONNEL WHERE JOB = 'MANAGER' AND (PAY >= 1500 OR JOB = 'SALESMAN') ORDER BY JOB;

--업무가 PRESIDENT 또는 SALESMAN 이고 급여가 1500이상인 사원
SELECT * FROM PERSONNEL WHERE (JOB = 'PRESIDENT' OR JOB = 'SALESMAN') AND PAY >= 1500 ORDER BY JOB;
SELECT * FROM PERSONNEL WHERE JOB IN ('PRESIDENT', 'SALESMAN') AND PAY >=1500;

DELETE FROM PERSONNEL WHERE PNAME LIKE 'HELLO%';

SELECT * FROM PERSONNEL;

--함수
--숫자함수
--ROUND(반올림)
SELECT ROUND(45.275,1) FROM DUAL;

SELECT ROUND(45.275,1) FROM PERSONNEL;

SELECT * FROM DUAL;

--  1  2  3  4  .  5  6  7 
-- -4 -3 -2 -1  0  1  2  3 (소수점을 판단할때 인덱스) 

SELECT ROUND(45.245, 1) FROM DUAL;
SELECT ROUND(45.245, -1) FROM DUAL;
SELECT ROUND(45.545, 0) FROM DUAL; --소수점 첫번째 자리에서 반올림해서 정수만 보여줌
SELECT ROUND(45.245) FROM DUAL; -- 적지 않으면 정수만 표현하지만 실제로는 소수점 첫째자리에서 반올림한다.


SELECT PNO, PNAME, PAY, ROUND(PAY, -2) PAY1 FROM PERSONNEL;

--TRUNC(절삭)(해당 자리수에서 무조건 버린다.)
SELECT TRUNC(45.245, 2) FROM DUAL;
SELECT TRUNC(45.245, -1) FROM DUAL;


SELECT PNO, PNAME, PAY, TRUNC(PAY, -2) PAY1 FROM PERSONNEL;

--CEIL / FLOOR (올림/내림) : 정수만 반환함
SELECT CEIL(461.21) FROM DUAL; --462  무조건 내림

SELECT FLOOR(461.91) FROM DUAL; --46\1  무조건 올림

--MOD(나머지)
SELECT MOD(10, 3) FROM DUAL;

--ABS(절대값)
SELECT ABS(-123) FROM DUAL;

--SIGN(양수: 1, 음수: -1, 영:0);
SELECT SIGN(100-20), SIGN(100-102), SIGN(100-100) FROM DUAL;


--지수
SELECT POWER(2,4) FROM DUAL;

--제곱근
SELECT SQRT(9) FROM DUAL;

--문자함수
--UPPER(소문자 -> 대문자)
SELECT UPPER('Oracle') FROM DUAL;

--LOWER(대문자 -> 소문자)
SELECT LOWER('ORACLE') FROM DUAL;

SELECT * FROM DIVISION WHERE DNAME = UPPER('sales');

SELECT * FROM DIVISION WHERE LOWER(DNAME)='sales';

--INITCAP
SELECT INITCAP('korea fighting') FROM DUAL;

--CONCAT(||)
SELECT PNAME || DNO FROM PERSONNEL;
SELECT CONCAT(PNAME, DNO) FROM PERSONNEL;


CREATE TABLE post (
	seq  NUMBER  NOT NULL
	,zipcode  VARCHAR2(10)
	,sido  VARCHAR2(50)
	,gugun  VARCHAR2(100)
	,dong  VARCHAR2(100)
	,bunji  VARCHAR2(50)
        ,PRIMARY KEY (seq)
);


SELECT * from post where dong like '행복%';

select sido || ' ' || gugun || ' ' || dong as juso from post where dong like '행복%';


--LENGTH
SELECT LENGTH('KOREA') FROM DUAL;
SELECT LENGTH('KOREA FIGHTING' FROM DUAL;

--SUBSTR
SELECT SUBSTR('ABCDEFG', 1, 3) FROM DUAL; --ABC
SELECT SUBSTR('ABCDEFG', 3, 2) FROM DUAL; --CD
SELECT SUBSTR('ABCDEFG', -3, 2) FROM DUAL; --EF
SELECT SUBSTR('ABCDEFG', -4) FROM DUAL; --DEFG


--INSTR
SELECT INSTR('ABCDEFG', 'C') FROM DUAL; --3

SELECT INSTR('AAAAAAA', 'A') FROM DUAL; --1
SELECT INSTR('ABCDEFG', 'a') FROM DUAL; --0

--RPAD/LPAD
SELECT RPAD(PNAME, 15, '*') FROM PERSONNEL;

--JUMIN
--941010-2018349

SELECT RPAD(SUBSTR('881104-1167811', 1, 8), 14, '*') JUMIN FROM DUAL;

--RTRIM/LTRIM
SELECT RTRIM('ABBBBBBB', 'B') FROM DUAL;
SELECT RTRIM('A       ', ' ') FROM DUAL; 

SELECT LTRIM('BBBABB', 'B') FROM DUAL;

--날짜 함수
--SYSDATE
SELECT SYSDATE FROM DUAL; --현재 날짜와 시간

SELECT SYSDATE-1,SYSDATE,SYSDATE+1 FROM DUAL; --어제,오늘,내일

--KIM사원이 현재까지 근무한 년 수
SELECT PNAME, ROUND((SYSDATE-STARTDATE)/365)||'년' 근속년수  FROM PERSONNEL WHERE PNAME='KIM';

--ROUND
SELECT STARTDATE,ROUND(STARTDATE,'YEAR') FROM PERSONNEL;
SELECT STARTDATE,ROUND(STARTDATE,'MONTH') FROM PERSONNEL;

--TRUNCATE
SELECT STARTDATE,TRUNC(STARTDATE,'YEAR') FROM PERSONNEL;
SELECT STARTDATE,TRUNC(STARTDATE,'MONTH') FROM PERSONNEL;

--MONTHS_BETWEEN(달의 수)
SELECT (MONTHS_BETWEEN(SYSDATE,'2002/06/01')) FROM DUAL;
SELECT TRUNC((MONTHS_BETWEEN(SYSDATE,'2002/06/01'))/12)달 FROM DUAL;

--LAST_DAY(말일)
SELECT STARTDATE,LAST_DAY(STARTDATE) FROM PERSONNEL;

--NEXT_DAY (돌아오는 날)
SELECT NEXT_DAY('2022-07-04 ','금요일') FROM DUAL; --오늘을 기준으로 돌아오는 금요일 시간이 0시로 고정
SELECT NEXT_DAY(SYSDATE,'금요일') FROM DUAL; --오늘을 기준으로 돌아오는 금요일

--ADD_MONTHS(개월 추가)
SELECT ADD_MONTHS(SYSDATE,24) FROM DUAL;

SELECT * FROM PERSONNEL;

INSERT INTO PERSONNEL
VALUES(2000,'HELOLKIM','SALESMAN',1116,'2022-07-04',5000,'',20);

SELECT * FROM PERSONNEL WHERE PNAME LIKE'%L__L%';



